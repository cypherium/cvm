// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	PubKey
	PrivKey
	Hash
	Address
	Signature
	CosiSign
	CosiAggr
	Account
	Coinbase
	Transaction
	TxBlock
	PoW
	KeyBlock
	AccountPool
	TxBlockPool
	KeyBlockPool
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 32 byte Ed25519 public key
type PubKey struct {
	XPubkey_1 uint64 `protobuf:"fixed64,1,opt,name=_pubkey_1,json=Pubkey1" json:"_pubkey_1,omitempty"`
	XPubkey_2 uint64 `protobuf:"fixed64,2,opt,name=_pubkey_2,json=Pubkey2" json:"_pubkey_2,omitempty"`
	XPubkey_3 uint64 `protobuf:"fixed64,3,opt,name=_pubkey_3,json=Pubkey3" json:"_pubkey_3,omitempty"`
	XPubkey_4 uint64 `protobuf:"fixed64,4,opt,name=_pubkey_4,json=Pubkey4" json:"_pubkey_4,omitempty"`
}

func (m *PubKey) Reset()                    { *m = PubKey{} }
func (m *PubKey) String() string            { return proto.CompactTextString(m) }
func (*PubKey) ProtoMessage()               {}
func (*PubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PubKey) GetXPubkey_1() uint64 {
	if m != nil {
		return m.XPubkey_1
	}
	return 0
}

func (m *PubKey) GetXPubkey_2() uint64 {
	if m != nil {
		return m.XPubkey_2
	}
	return 0
}

func (m *PubKey) GetXPubkey_3() uint64 {
	if m != nil {
		return m.XPubkey_3
	}
	return 0
}

func (m *PubKey) GetXPubkey_4() uint64 {
	if m != nil {
		return m.XPubkey_4
	}
	return 0
}

// 64 byte Ed25519 public key
type PrivKey struct {
	XPrivkey_1 uint64 `protobuf:"fixed64,1,opt,name=_privkey_1,json=Privkey1" json:"_privkey_1,omitempty"`
	XPrivkey_2 uint64 `protobuf:"fixed64,2,opt,name=_privkey_2,json=Privkey2" json:"_privkey_2,omitempty"`
	XPrivkey_3 uint64 `protobuf:"fixed64,3,opt,name=_privkey_3,json=Privkey3" json:"_privkey_3,omitempty"`
	XPrivkey_4 uint64 `protobuf:"fixed64,4,opt,name=_privkey_4,json=Privkey4" json:"_privkey_4,omitempty"`
	XPrivkey_5 uint64 `protobuf:"fixed64,5,opt,name=_privkey_5,json=Privkey5" json:"_privkey_5,omitempty"`
	XPrivkey_6 uint64 `protobuf:"fixed64,6,opt,name=_privkey_6,json=Privkey6" json:"_privkey_6,omitempty"`
	XPrivkey_7 uint64 `protobuf:"fixed64,7,opt,name=_privkey_7,json=Privkey7" json:"_privkey_7,omitempty"`
	XPrivkey_8 uint64 `protobuf:"fixed64,8,opt,name=_privkey_8,json=Privkey8" json:"_privkey_8,omitempty"`
}

func (m *PrivKey) Reset()                    { *m = PrivKey{} }
func (m *PrivKey) String() string            { return proto.CompactTextString(m) }
func (*PrivKey) ProtoMessage()               {}
func (*PrivKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PrivKey) GetXPrivkey_1() uint64 {
	if m != nil {
		return m.XPrivkey_1
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_2() uint64 {
	if m != nil {
		return m.XPrivkey_2
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_3() uint64 {
	if m != nil {
		return m.XPrivkey_3
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_4() uint64 {
	if m != nil {
		return m.XPrivkey_4
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_5() uint64 {
	if m != nil {
		return m.XPrivkey_5
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_6() uint64 {
	if m != nil {
		return m.XPrivkey_6
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_7() uint64 {
	if m != nil {
		return m.XPrivkey_7
	}
	return 0
}

func (m *PrivKey) GetXPrivkey_8() uint64 {
	if m != nil {
		return m.XPrivkey_8
	}
	return 0
}

// 32 byte SHA3-256 hash
type Hash struct {
	XHash_1 uint64 `protobuf:"fixed64,1,opt,name=_hash_1,json=Hash1" json:"_hash_1,omitempty"`
	XHash_2 uint64 `protobuf:"fixed64,2,opt,name=_hash_2,json=Hash2" json:"_hash_2,omitempty"`
	XHash_3 uint64 `protobuf:"fixed64,3,opt,name=_hash_3,json=Hash3" json:"_hash_3,omitempty"`
	XHash_4 uint64 `protobuf:"fixed64,4,opt,name=_hash_4,json=Hash4" json:"_hash_4,omitempty"`
}

func (m *Hash) Reset()                    { *m = Hash{} }
func (m *Hash) String() string            { return proto.CompactTextString(m) }
func (*Hash) ProtoMessage()               {}
func (*Hash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Hash) GetXHash_1() uint64 {
	if m != nil {
		return m.XHash_1
	}
	return 0
}

func (m *Hash) GetXHash_2() uint64 {
	if m != nil {
		return m.XHash_2
	}
	return 0
}

func (m *Hash) GetXHash_3() uint64 {
	if m != nil {
		return m.XHash_3
	}
	return 0
}

func (m *Hash) GetXHash_4() uint64 {
	if m != nil {
		return m.XHash_4
	}
	return 0
}

// 20 byte address
type Address struct {
	XAddr_1 uint32 `protobuf:"fixed32,1,opt,name=_addr_1,json=Addr1" json:"_addr_1,omitempty"`
	XAddr_2 uint32 `protobuf:"fixed32,2,opt,name=_addr_2,json=Addr2" json:"_addr_2,omitempty"`
	XAddr_3 uint32 `protobuf:"fixed32,3,opt,name=_addr_3,json=Addr3" json:"_addr_3,omitempty"`
	XAddr_4 uint32 `protobuf:"fixed32,4,opt,name=_addr_4,json=Addr4" json:"_addr_4,omitempty"`
	XAddr_5 uint32 `protobuf:"fixed32,5,opt,name=_addr_5,json=Addr5" json:"_addr_5,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Address) GetXAddr_1() uint32 {
	if m != nil {
		return m.XAddr_1
	}
	return 0
}

func (m *Address) GetXAddr_2() uint32 {
	if m != nil {
		return m.XAddr_2
	}
	return 0
}

func (m *Address) GetXAddr_3() uint32 {
	if m != nil {
		return m.XAddr_3
	}
	return 0
}

func (m *Address) GetXAddr_4() uint32 {
	if m != nil {
		return m.XAddr_4
	}
	return 0
}

func (m *Address) GetXAddr_5() uint32 {
	if m != nil {
		return m.XAddr_5
	}
	return 0
}

// 64 byte signature
type Signature struct {
	XSign_1 uint64 `protobuf:"fixed64,1,opt,name=_sign_1,json=Sign1" json:"_sign_1,omitempty"`
	XSign_2 uint64 `protobuf:"fixed64,2,opt,name=_sign_2,json=Sign2" json:"_sign_2,omitempty"`
	XSign_3 uint64 `protobuf:"fixed64,3,opt,name=_sign_3,json=Sign3" json:"_sign_3,omitempty"`
	XSign_4 uint64 `protobuf:"fixed64,4,opt,name=_sign_4,json=Sign4" json:"_sign_4,omitempty"`
	XSign_5 uint64 `protobuf:"fixed64,5,opt,name=_sign_5,json=Sign5" json:"_sign_5,omitempty"`
	XSign_6 uint64 `protobuf:"fixed64,6,opt,name=_sign_6,json=Sign6" json:"_sign_6,omitempty"`
	XSign_7 uint64 `protobuf:"fixed64,7,opt,name=_sign_7,json=Sign7" json:"_sign_7,omitempty"`
	XSign_8 uint64 `protobuf:"fixed64,8,opt,name=_sign_8,json=Sign8" json:"_sign_8,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Signature) GetXSign_1() uint64 {
	if m != nil {
		return m.XSign_1
	}
	return 0
}

func (m *Signature) GetXSign_2() uint64 {
	if m != nil {
		return m.XSign_2
	}
	return 0
}

func (m *Signature) GetXSign_3() uint64 {
	if m != nil {
		return m.XSign_3
	}
	return 0
}

func (m *Signature) GetXSign_4() uint64 {
	if m != nil {
		return m.XSign_4
	}
	return 0
}

func (m *Signature) GetXSign_5() uint64 {
	if m != nil {
		return m.XSign_5
	}
	return 0
}

func (m *Signature) GetXSign_6() uint64 {
	if m != nil {
		return m.XSign_6
	}
	return 0
}

func (m *Signature) GetXSign_7() uint64 {
	if m != nil {
		return m.XSign_7
	}
	return 0
}

func (m *Signature) GetXSign_8() uint64 {
	if m != nil {
		return m.XSign_8
	}
	return 0
}

// 64 byte Cosi signature
type CosiSign struct {
	XSign *Signature `protobuf:"bytes,1,opt,name=_sign,json=Sign" json:"_sign,omitempty"`
}

func (m *CosiSign) Reset()                    { *m = CosiSign{} }
func (m *CosiSign) String() string            { return proto.CompactTextString(m) }
func (*CosiSign) ProtoMessage()               {}
func (*CosiSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CosiSign) GetXSign() *Signature {
	if m != nil {
		return m.XSign
	}
	return nil
}

// 64 byte Cosi aggregated address
type CosiAggr struct {
	XAggr_1 uint64 `protobuf:"fixed64,1,opt,name=_aggr_1,json=Aggr1" json:"_aggr_1,omitempty"`
	XAggr_2 uint64 `protobuf:"fixed64,2,opt,name=_aggr_2,json=Aggr2" json:"_aggr_2,omitempty"`
	XAggr_3 uint64 `protobuf:"fixed64,3,opt,name=_aggr_3,json=Aggr3" json:"_aggr_3,omitempty"`
	XAggr_4 uint64 `protobuf:"fixed64,4,opt,name=_aggr_4,json=Aggr4" json:"_aggr_4,omitempty"`
	XAggr_5 uint64 `protobuf:"fixed64,5,opt,name=_aggr_5,json=Aggr5" json:"_aggr_5,omitempty"`
	XAggr_6 uint64 `protobuf:"fixed64,6,opt,name=_aggr_6,json=Aggr6" json:"_aggr_6,omitempty"`
	XAggr_7 uint64 `protobuf:"fixed64,7,opt,name=_aggr_7,json=Aggr7" json:"_aggr_7,omitempty"`
	XAggr_8 uint64 `protobuf:"fixed64,8,opt,name=_aggr_8,json=Aggr8" json:"_aggr_8,omitempty"`
}

func (m *CosiAggr) Reset()                    { *m = CosiAggr{} }
func (m *CosiAggr) String() string            { return proto.CompactTextString(m) }
func (*CosiAggr) ProtoMessage()               {}
func (*CosiAggr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CosiAggr) GetXAggr_1() uint64 {
	if m != nil {
		return m.XAggr_1
	}
	return 0
}

func (m *CosiAggr) GetXAggr_2() uint64 {
	if m != nil {
		return m.XAggr_2
	}
	return 0
}

func (m *CosiAggr) GetXAggr_3() uint64 {
	if m != nil {
		return m.XAggr_3
	}
	return 0
}

func (m *CosiAggr) GetXAggr_4() uint64 {
	if m != nil {
		return m.XAggr_4
	}
	return 0
}

func (m *CosiAggr) GetXAggr_5() uint64 {
	if m != nil {
		return m.XAggr_5
	}
	return 0
}

func (m *CosiAggr) GetXAggr_6() uint64 {
	if m != nil {
		return m.XAggr_6
	}
	return 0
}

func (m *CosiAggr) GetXAggr_7() uint64 {
	if m != nil {
		return m.XAggr_7
	}
	return 0
}

func (m *CosiAggr) GetXAggr_8() uint64 {
	if m != nil {
		return m.XAggr_8
	}
	return 0
}

// Accounts
type Account struct {
	Version uint32   `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Type    uint32   `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	Address *Address `protobuf:"bytes,3,opt,name=Address" json:"Address,omitempty"`
	Latency uint32   `protobuf:"varint,4,opt,name=Latency" json:"Latency,omitempty"`
	Deposit uint64   `protobuf:"varint,5,opt,name=Deposit" json:"Deposit,omitempty"`
	Code    []byte   `protobuf:"bytes,6,opt,name=Code,proto3" json:"Code,omitempty"`
	Storage []byte   `protobuf:"bytes,7,opt,name=Storage,proto3" json:"Storage,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Account) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Account) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Account) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetLatency() uint32 {
	if m != nil {
		return m.Latency
	}
	return 0
}

func (m *Account) GetDeposit() uint64 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

func (m *Account) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Account) GetStorage() []byte {
	if m != nil {
		return m.Storage
	}
	return nil
}

type Coinbase struct {
	NumCommittee uint64     `protobuf:"varint,1,opt,name=NumCommittee" json:"NumCommittee,omitempty"`
	Committee    []*Address `protobuf:"bytes,2,rep,name=Committee" json:"Committee,omitempty"`
	Quantity     uint64     `protobuf:"varint,3,opt,name=Quantity" json:"Quantity,omitempty"`
}

func (m *Coinbase) Reset()                    { *m = Coinbase{} }
func (m *Coinbase) String() string            { return proto.CompactTextString(m) }
func (*Coinbase) ProtoMessage()               {}
func (*Coinbase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Coinbase) GetNumCommittee() uint64 {
	if m != nil {
		return m.NumCommittee
	}
	return 0
}

func (m *Coinbase) GetCommittee() []*Address {
	if m != nil {
		return m.Committee
	}
	return nil
}

func (m *Coinbase) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type Transaction struct {
	Version   uint32     `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Type      uint32     `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	SenderKey *PubKey    `protobuf:"bytes,3,opt,name=SenderKey" json:"SenderKey,omitempty"`
	SenderSig *Signature `protobuf:"bytes,4,opt,name=SenderSig" json:"SenderSig,omitempty"`
	Recipient *Address   `protobuf:"bytes,5,opt,name=Recipient" json:"Recipient,omitempty"`
	Quantity  uint64     `protobuf:"varint,6,opt,name=Quantity" json:"Quantity,omitempty"`
	Data      []byte     `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
	AvailGas  uint64     `protobuf:"varint,8,opt,name=AvailGas" json:"AvailGas,omitempty"`
	GasPrice  uint64     `protobuf:"varint,9,opt,name=GasPrice" json:"GasPrice,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Transaction) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Transaction) GetSenderKey() *PubKey {
	if m != nil {
		return m.SenderKey
	}
	return nil
}

func (m *Transaction) GetSenderSig() *Signature {
	if m != nil {
		return m.SenderSig
	}
	return nil
}

func (m *Transaction) GetRecipient() *Address {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Transaction) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transaction) GetAvailGas() uint64 {
	if m != nil {
		return m.AvailGas
	}
	return 0
}

func (m *Transaction) GetGasPrice() uint64 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

type TxBlock struct {
	Version   uint32                     `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Type      uint32                     `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	KblkHash  *Hash                      `protobuf:"bytes,3,opt,name=KblkHash" json:"KblkHash,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=Timestamp" json:"Timestamp,omitempty"`
	// uint64    Timestamp     = 4;
	MklRoot      *Hash          `protobuf:"bytes,5,opt,name=MklRoot" json:"MklRoot,omitempty"`
	Coinbase     *Coinbase      `protobuf:"bytes,6,opt,name=Coinbase" json:"Coinbase,omitempty"`
	KblkCosiSign *CosiSign      `protobuf:"bytes,7,opt,name=KblkCosiSign" json:"KblkCosiSign,omitempty"`
	KblkCosiAggr *CosiAggr      `protobuf:"bytes,8,opt,name=KblkCosiAggr" json:"KblkCosiAggr,omitempty"`
	TxCnt        uint64         `protobuf:"varint,9,opt,name=TxCnt" json:"TxCnt,omitempty"`
	Tx           []*Transaction `protobuf:"bytes,10,rep,name=Tx" json:"Tx,omitempty"`
}

func (m *TxBlock) Reset()                    { *m = TxBlock{} }
func (m *TxBlock) String() string            { return proto.CompactTextString(m) }
func (*TxBlock) ProtoMessage()               {}
func (*TxBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TxBlock) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TxBlock) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TxBlock) GetKblkHash() *Hash {
	if m != nil {
		return m.KblkHash
	}
	return nil
}

func (m *TxBlock) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TxBlock) GetMklRoot() *Hash {
	if m != nil {
		return m.MklRoot
	}
	return nil
}

func (m *TxBlock) GetCoinbase() *Coinbase {
	if m != nil {
		return m.Coinbase
	}
	return nil
}

func (m *TxBlock) GetKblkCosiSign() *CosiSign {
	if m != nil {
		return m.KblkCosiSign
	}
	return nil
}

func (m *TxBlock) GetKblkCosiAggr() *CosiAggr {
	if m != nil {
		return m.KblkCosiAggr
	}
	return nil
}

func (m *TxBlock) GetTxCnt() uint64 {
	if m != nil {
		return m.TxCnt
	}
	return 0
}

func (m *TxBlock) GetTx() []*Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type PoW struct {
	PrevHah    *Hash                      `protobuf:"bytes,1,opt,name=PrevHah" json:"PrevHah,omitempty"`
	Difficulty uint64                     `protobuf:"varint,2,opt,name=Difficulty" json:"Difficulty,omitempty"`
	Timestamp  *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=Timestamp" json:"Timestamp,omitempty"`
	// uint64   Timestamp  = 3;
	Worker *Address `protobuf:"bytes,4,opt,name=Worker" json:"Worker,omitempty"`
	Nonce  uint64   `protobuf:"varint,5,opt,name=Nonce" json:"Nonce,omitempty"`
}

func (m *PoW) Reset()                    { *m = PoW{} }
func (m *PoW) String() string            { return proto.CompactTextString(m) }
func (*PoW) ProtoMessage()               {}
func (*PoW) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PoW) GetPrevHah() *Hash {
	if m != nil {
		return m.PrevHah
	}
	return nil
}

func (m *PoW) GetDifficulty() uint64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *PoW) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PoW) GetWorker() *Address {
	if m != nil {
		return m.Worker
	}
	return nil
}

func (m *PoW) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type KeyBlock struct {
	Version   uint32                     `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	// uint64    Timestamp    = 2;
	PrevHash     *Hash     `protobuf:"bytes,3,opt,name=PrevHash" json:"PrevHash,omitempty"`
	MklRoot      *Hash     `protobuf:"bytes,4,opt,name=MklRoot" json:"MklRoot,omitempty"`
	KblkCosiSign *CosiSign `protobuf:"bytes,5,opt,name=KblkCosiSign" json:"KblkCosiSign,omitempty"`
	KblkCosiAggr *CosiAggr `protobuf:"bytes,6,opt,name=KblkCosiAggr" json:"KblkCosiAggr,omitempty"`
	NumPow       uint64    `protobuf:"varint,7,opt,name=NumPow" json:"NumPow,omitempty"`
	Pows         []*PoW    `protobuf:"bytes,8,rep,name=Pows" json:"Pows,omitempty"`
}

func (m *KeyBlock) Reset()                    { *m = KeyBlock{} }
func (m *KeyBlock) String() string            { return proto.CompactTextString(m) }
func (*KeyBlock) ProtoMessage()               {}
func (*KeyBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *KeyBlock) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *KeyBlock) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *KeyBlock) GetPrevHash() *Hash {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *KeyBlock) GetMklRoot() *Hash {
	if m != nil {
		return m.MklRoot
	}
	return nil
}

func (m *KeyBlock) GetKblkCosiSign() *CosiSign {
	if m != nil {
		return m.KblkCosiSign
	}
	return nil
}

func (m *KeyBlock) GetKblkCosiAggr() *CosiAggr {
	if m != nil {
		return m.KblkCosiAggr
	}
	return nil
}

func (m *KeyBlock) GetNumPow() uint64 {
	if m != nil {
		return m.NumPow
	}
	return 0
}

func (m *KeyBlock) GetPows() []*PoW {
	if m != nil {
		return m.Pows
	}
	return nil
}

type AccountPool struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=Accounts" json:"Accounts,omitempty"`
}

func (m *AccountPool) Reset()                    { *m = AccountPool{} }
func (m *AccountPool) String() string            { return proto.CompactTextString(m) }
func (*AccountPool) ProtoMessage()               {}
func (*AccountPool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AccountPool) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type TxBlockPool struct {
	TxBlocks []*TxBlock `protobuf:"bytes,1,rep,name=TxBlocks" json:"TxBlocks,omitempty"`
}

func (m *TxBlockPool) Reset()                    { *m = TxBlockPool{} }
func (m *TxBlockPool) String() string            { return proto.CompactTextString(m) }
func (*TxBlockPool) ProtoMessage()               {}
func (*TxBlockPool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *TxBlockPool) GetTxBlocks() []*TxBlock {
	if m != nil {
		return m.TxBlocks
	}
	return nil
}

type KeyBlockPool struct {
	KeyBlocks []*KeyBlock `protobuf:"bytes,1,rep,name=KeyBlocks" json:"KeyBlocks,omitempty"`
}

func (m *KeyBlockPool) Reset()                    { *m = KeyBlockPool{} }
func (m *KeyBlockPool) String() string            { return proto.CompactTextString(m) }
func (*KeyBlockPool) ProtoMessage()               {}
func (*KeyBlockPool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *KeyBlockPool) GetKeyBlocks() []*KeyBlock {
	if m != nil {
		return m.KeyBlocks
	}
	return nil
}

func init() {
	proto.RegisterType((*PubKey)(nil), "PubKey")
	proto.RegisterType((*PrivKey)(nil), "PrivKey")
	proto.RegisterType((*Hash)(nil), "Hash")
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*Signature)(nil), "Signature")
	proto.RegisterType((*CosiSign)(nil), "CosiSign")
	proto.RegisterType((*CosiAggr)(nil), "CosiAggr")
	proto.RegisterType((*Account)(nil), "Account")
	proto.RegisterType((*Coinbase)(nil), "Coinbase")
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*TxBlock)(nil), "TxBlock")
	proto.RegisterType((*PoW)(nil), "PoW")
	proto.RegisterType((*KeyBlock)(nil), "KeyBlock")
	proto.RegisterType((*AccountPool)(nil), "AccountPool")
	proto.RegisterType((*TxBlockPool)(nil), "TxBlockPool")
	proto.RegisterType((*KeyBlockPool)(nil), "KeyBlockPool")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1002 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0xcf, 0x6e, 0xe3, 0xb6,
	0x13, 0xc7, 0x61, 0x47, 0xb6, 0xec, 0x89, 0x73, 0x11, 0x7e, 0x58, 0x08, 0xc1, 0xe2, 0x97, 0xac,
	0xd0, 0x6d, 0x17, 0x28, 0xaa, 0x85, 0x65, 0x27, 0xf6, 0x35, 0x4d, 0x80, 0x5d, 0x20, 0x6d, 0xa0,
	0x32, 0x46, 0x73, 0x0c, 0x64, 0x99, 0x51, 0x04, 0xdb, 0xa2, 0x21, 0xc9, 0x59, 0xfb, 0xd8, 0xf7,
	0xe8, 0x53, 0xf4, 0xd4, 0x4b, 0x5f, 0xa0, 0x7d, 0x97, 0xde, 0x7b, 0x2b, 0x86, 0x7f, 0xc5, 0xb6,
	0x68, 0xe1, 0x9b, 0xe6, 0xf3, 0x1d, 0x9a, 0xfc, 0xce, 0x0c, 0x69, 0x18, 0xa4, 0x6c, 0xbd, 0x66,
	0x45, 0xb8, 0x29, 0x59, 0xcd, 0x4e, 0xcf, 0x32, 0xc6, 0xb2, 0x15, 0x7d, 0xcf, 0xa3, 0xf9, 0xf6,
	0xe9, 0x7d, 0x9d, 0xaf, 0x69, 0x55, 0x27, 0xeb, 0x8d, 0x48, 0x08, 0x76, 0xd0, 0x8d, 0xb7, 0xf3,
	0x5b, 0xba, 0xf7, 0x4e, 0xa1, 0xff, 0xb8, 0xd9, 0xce, 0x97, 0x74, 0xff, 0x38, 0xf4, 0x5b, 0xe7,
	0xad, 0x77, 0x5d, 0xe2, 0xc6, 0x3c, 0x1e, 0x36, 0xb5, 0xc8, 0x6f, 0x37, 0xb5, 0xa8, 0xa9, 0x8d,
	0xfc, 0xa3, 0xa6, 0x36, 0x6a, 0x6a, 0x63, 0xdf, 0x69, 0x6a, 0xe3, 0xe0, 0x8f, 0x16, 0xb8, 0x71,
	0x99, 0xbf, 0xe0, 0xde, 0xaf, 0x01, 0x1e, 0x37, 0x65, 0xfe, 0xd2, 0xdc, 0xbc, 0x17, 0x0b, 0x30,
	0xb4, 0x54, 0xb5, 0xbd, 0x52, 0x23, 0x4b, 0x55, 0x07, 0x50, 0xea, 0xc8, 0x52, 0xd5, 0x11, 0x94,
	0x3a, 0xb6, 0xd4, 0x0b, 0xbf, 0x63, 0xa9, 0x17, 0x96, 0x7a, 0xe9, 0x77, 0x2d, 0xf5, 0xd2, 0x52,
	0x27, 0xbe, 0x6b, 0xa9, 0x13, 0x4b, 0x9d, 0xfa, 0x3d, 0x4b, 0x9d, 0x06, 0x4f, 0xe0, 0x7c, 0x4c,
	0xaa, 0x67, 0xef, 0x15, 0xb8, 0x8f, 0xcf, 0x49, 0xf5, 0xac, 0x4d, 0x77, 0x10, 0x0f, 0x0d, 0x57,
	0x76, 0x39, 0x8f, 0x0c, 0x57, 0x46, 0x39, 0x1f, 0x19, 0xae, 0x2c, 0x72, 0x3e, 0x0e, 0x7e, 0x68,
	0x81, 0x7b, 0xb5, 0x58, 0x94, 0xb4, 0xaa, 0x78, 0x4e, 0xb2, 0x58, 0x94, 0x72, 0x2f, 0x97, 0x74,
	0x50, 0x19, 0x1a, 0x2e, 0xf6, 0x92, 0x3c, 0x32, 0x5c, 0xec, 0x25, 0xf9, 0xc8, 0x70, 0xb1, 0x97,
	0xe4, 0x63, 0xc3, 0x45, 0x21, 0x25, 0xbf, 0x08, 0x7e, 0x6b, 0x41, 0xff, 0x3e, 0xcf, 0x8a, 0xa4,
	0xde, 0x96, 0x94, 0x67, 0x55, 0x79, 0x56, 0x18, 0xc7, 0xa8, 0x0d, 0x0d, 0xd7, 0x8e, 0x91, 0x47,
	0x86, 0x6b, 0xc7, 0xc8, 0x47, 0x86, 0x6b, 0xc7, 0xc8, 0xc7, 0x86, 0xab, 0x76, 0x72, 0x7e, 0x61,
	0xb8, 0x6a, 0x24, 0xe7, 0x97, 0x86, 0xab, 0x16, 0x72, 0x3e, 0x31, 0x5c, 0x35, 0x8f, 0xf3, 0x69,
	0xf0, 0x25, 0xf4, 0xae, 0x59, 0x95, 0x63, 0xe0, 0x9d, 0x41, 0x87, 0xe7, 0x70, 0x27, 0xc7, 0x11,
	0x84, 0xda, 0x26, 0x71, 0xf0, 0x33, 0xf8, 0xb5, 0x25, 0xb2, 0xaf, 0xb2, 0xac, 0x14, 0xf5, 0xc9,
	0xb2, 0xd2, 0x38, 0x47, 0x3c, 0x34, 0x5c, 0x3b, 0x47, 0x1e, 0x19, 0xae, 0x9d, 0x23, 0x1f, 0x19,
	0xae, 0x9d, 0x23, 0x1f, 0x1b, 0xae, 0x9d, 0x23, 0xbf, 0x30, 0x5c, 0x3b, 0x47, 0x7e, 0x69, 0xb8,
	0x76, 0x8e, 0x7c, 0x62, 0xb8, 0x76, 0x8e, 0x7c, 0x1a, 0xfc, 0x82, 0xb3, 0x94, 0xa6, 0x6c, 0x5b,
	0xd4, 0x9e, 0x0f, 0xee, 0xf7, 0xb4, 0xac, 0x72, 0x26, 0xbc, 0x9f, 0x10, 0x15, 0x7a, 0x1e, 0x38,
	0xb3, 0xfd, 0x86, 0x72, 0x2b, 0x27, 0x84, 0x7f, 0x7b, 0x81, 0x1e, 0x42, 0xee, 0xe4, 0x38, 0xea,
	0x85, 0x32, 0x26, 0x7a, 0x3a, 0x7d, 0x70, 0xbf, 0x49, 0x6a, 0x5a, 0xa4, 0x7b, 0xee, 0xea, 0x84,
	0xa8, 0x10, 0x95, 0x1b, 0xba, 0x61, 0x55, 0x5e, 0x73, 0x5f, 0x0e, 0x51, 0x21, 0xee, 0x75, 0xcd,
	0x16, 0x94, 0xdb, 0x1a, 0x10, 0xfe, 0x8d, 0xd9, 0xf7, 0x35, 0x2b, 0x93, 0x8c, 0x72, 0x57, 0x03,
	0xa2, 0xc2, 0xa0, 0xc4, 0x5e, 0xe4, 0xc5, 0x3c, 0xa9, 0xf0, 0x44, 0x83, 0xbb, 0xed, 0xfa, 0x9a,
	0xad, 0xd7, 0x79, 0x5d, 0x53, 0xca, 0x4d, 0x38, 0xc4, 0x62, 0xde, 0xe7, 0xd0, 0x37, 0x09, 0xed,
	0xf3, 0x23, 0xeb, 0xdc, 0x46, 0xf2, 0x4e, 0xa1, 0xf7, 0xdd, 0x36, 0x29, 0xea, 0xbc, 0xde, 0x73,
	0x7b, 0x0e, 0xd1, 0x71, 0xf0, 0x63, 0x1b, 0x8e, 0x67, 0x65, 0x52, 0x54, 0x49, 0x5a, 0x63, 0x75,
	0x0e, 0xab, 0xdb, 0x5b, 0xe8, 0xdf, 0xd3, 0x62, 0x41, 0xcb, 0x5b, 0xba, 0x97, 0x95, 0x73, 0x43,
	0xf1, 0x5a, 0x13, 0xa3, 0x78, 0xef, 0x54, 0xda, 0x7d, 0x9e, 0xf1, 0xe2, 0xd9, 0xa3, 0x68, 0x44,
	0xb4, 0x44, 0x68, 0x9a, 0x6f, 0x72, 0x5a, 0x88, 0x62, 0x5a, 0x96, 0xb4, 0x64, 0x59, 0xea, 0xda,
	0x96, 0xf0, 0xa0, 0x37, 0x49, 0x9d, 0xc8, 0xea, 0xf2, 0x6f, 0xcc, 0xbf, 0x7a, 0x49, 0xf2, 0xd5,
	0x87, 0xa4, 0xe2, 0x33, 0xe3, 0x10, 0x1d, 0xa3, 0xf6, 0x21, 0xa9, 0xe2, 0x32, 0x4f, 0xa9, 0xdf,
	0x17, 0x9a, 0x8a, 0x83, 0xdf, 0xdb, 0xe0, 0xce, 0x76, 0x5f, 0xaf, 0x58, 0xba, 0x3c, 0xb0, 0x34,
	0x6f, 0xa0, 0x77, 0x3b, 0x5f, 0x2d, 0xf1, 0x95, 0x93, 0x95, 0xe9, 0x84, 0x18, 0x10, 0x8d, 0xbd,
	0x29, 0xf4, 0x67, 0xea, 0xcf, 0x4e, 0x96, 0xe5, 0x34, 0x14, 0x7f, 0x87, 0xa1, 0xfa, 0x3b, 0x0c,
	0x75, 0x06, 0x31, 0xc9, 0xde, 0x19, 0xb8, 0xdf, 0x2e, 0x57, 0x84, 0x31, 0x55, 0x24, 0xf9, 0xdb,
	0x8a, 0x7a, 0x6f, 0xcd, 0x28, 0xf1, 0xfa, 0x1c, 0x47, 0xfd, 0x50, 0x01, 0x62, 0xa6, 0xec, 0x2b,
	0x18, 0xe0, 0x69, 0xd4, 0x7b, 0xc1, 0x4b, 0x26, 0x52, 0x05, 0x20, 0x96, 0xdc, 0x4c, 0xc7, 0x1b,
	0xc7, 0x2b, 0xa9, 0xd2, 0x11, 0x10, 0x4b, 0xf6, 0xfe, 0x07, 0x9d, 0xd9, 0xee, 0xba, 0xa8, 0x65,
	0x55, 0x45, 0xe0, 0xbd, 0x86, 0xf6, 0x6c, 0xe7, 0x03, 0x1f, 0xd7, 0x41, 0xd8, 0x98, 0x3d, 0xd2,
	0x9e, 0xed, 0x82, 0x9f, 0x5b, 0x70, 0x14, 0xb3, 0x07, 0x74, 0x18, 0x97, 0xf4, 0xe5, 0x63, 0xf2,
	0x2c, 0xdf, 0x2e, 0xe5, 0x50, 0x52, 0xef, 0xff, 0x00, 0x37, 0xf9, 0xd3, 0x53, 0x9e, 0x6e, 0x57,
	0xf5, 0x9e, 0x57, 0xde, 0x21, 0x0d, 0x62, 0x17, 0xf7, 0xe8, 0x90, 0xe2, 0x9e, 0x43, 0xf7, 0x81,
	0x95, 0x4b, 0x5a, 0xca, 0x9e, 0x98, 0x01, 0x94, 0x1c, 0x8d, 0xdd, 0xb1, 0x22, 0xa5, 0xf2, 0xba,
	0x8b, 0x20, 0xf8, 0xa9, 0x0d, 0xbd, 0x5b, 0xba, 0xff, 0xaf, 0x61, 0xb1, 0x0e, 0xd6, 0x3e, 0xe4,
	0x60, 0x6f, 0xa0, 0x27, 0xdc, 0xff, 0x6d, 0xa4, 0x14, 0x6e, 0x0e, 0x86, 0xf3, 0x8f, 0x83, 0xf1,
	0xd7, 0x8e, 0x77, 0x0e, 0xeb, 0x78, 0xf7, 0xdf, 0x3b, 0xfe, 0x0a, 0xba, 0x77, 0xdb, 0x75, 0xcc,
	0x3e, 0xf1, 0x49, 0x72, 0x88, 0x8c, 0x3c, 0x1f, 0x9c, 0x98, 0x7d, 0xc2, 0xab, 0x87, 0x5d, 0x77,
	0xc2, 0x98, 0x3d, 0x10, 0x4e, 0x82, 0x11, 0x1c, 0xcb, 0x27, 0x3b, 0x66, 0x6c, 0xe5, 0x7d, 0x06,
	0x3d, 0x19, 0x56, 0x7e, 0x4b, 0xbd, 0x68, 0x02, 0x10, 0xad, 0xe0, 0x22, 0x79, 0x29, 0xd5, 0x22,
	0x19, 0x9a, 0x45, 0x12, 0x10, 0xad, 0x04, 0x13, 0x18, 0xa8, 0xee, 0xf0, 0x55, 0x5f, 0x40, 0x5f,
	0xc5, 0x6a, 0x59, 0x3f, 0x54, 0x84, 0x18, 0x6d, 0xde, 0xe5, 0x5d, 0x19, 0xfd, 0x19, 0x00, 0x00,
	0xff, 0xff, 0xf4, 0x13, 0x84, 0x1a, 0xb8, 0x0a, 0x00, 0x00,
}
